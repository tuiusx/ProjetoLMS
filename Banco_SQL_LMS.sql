


--Tabela usuario
create table USUARIO
	(
		ID INT IDENTITY,
		LOGIN VARCHAR(30) NOT NULL,
		SENHA VARCHAR(30) NOT NULL,
		DT_EXPIRACAO DATE NOT NULL CONSTRAINT DF_DT_EXPIRACAO DEFAULT ('01/01/1900'), 

		CONSTRAINT PK_USUARIO PRIMARY KEY (ID),
		CONSTRAINT UQ_LOGIN UNIQUE( LOGIN ),
		
	);

--tabela curso
CREATE TABLE CURSO 
(
	ID		INT IDENTITY ,
	NOME	VARCHAR (50) NOT NULL,

	CONSTRAINT PK_CURSO PRIMARY KEY (ID),
	CONSTRAINT UQ_CURSO_NOME UNIQUE (NOME)
);

--Tabela coordenador
	create table COORDENADOR
	(
		ID INT IDENTITY ,
		ID_USUARIO INT NOT NULL,
		NOME VARCHAR (50) NOT NULL,
		EMAIL VARCHAR(40) NOT NULL,
		CELULAR CHAR (14) NOT NULL,

		CONSTRAINT PK_COORDENADOR PRIMARY KEY( ID ),
		CONSTRAINT UQ_EMAIL UNIQUE(EMAIL),
		CONSTRAINT UQ_CELULAR UNIQUE(CELULAR),
		CONSTRAINT FK_ID_USUARIO FOREIGN KEY (ID_USUARIO) 
			REFERENCES USUARIO (ID),
	);

--Tabela professor
	create table PROFESSOR
	(
		ID INT IDENTITY ,
		ID_USUARIO INT NOT NULL,
		EMAIL_PROFESSOR VARCHAR(40) NOT NULL,
		CELULAR_PROFESSOR CHAR (14)NOT NULL, 
		APELIDO VARCHAR(50)NOT NULL,

		CONSTRAINT PK_PROFESSOR PRIMARY KEY (ID),
		CONSTRAINT UQ_EMAIL_PROFESSOR UNIQUE(EMAIL_PROFESSOR),
		CONSTRAINT UQ_CELULAR_PROFESSOR UNIQUE(CELULAR_PROFESSOR),
		CONSTRAINT FK_PROFESSOR_ID_USUARIO FOREIGN KEY (ID_USUARIO) 
			REFERENCES USUARIO (ID),
	);

--Tabela aluno
	create table ALUNO
	(
		ID INT IDENTITY ,
		ID_USUARIO INT NOT NULL,
		NOME VARCHAR (50) NOT NULL,
		EMAIL_ALUNO VARCHAR(40) NOT NULL,
		CELULAR_ALUNO CHAR (14) NOT NULL,
		RA CHAR(10) NOT NULL,
		FOTO VARCHAR(100)

		CONSTRAINT PK_ALUNO PRIMARY KEY( ID ),
		CONSTRAINT UQ_EMAIL_ALUNO UNIQUE(EMAIL_ALUNO),
		CONSTRAINT UQ_CELULAR_ALUNO UNIQUE(CELULAR_ALUNO),
		CONSTRAINT FK_ALUNO_ID_USUARIO FOREIGN KEY (ID_USUARIO) 
			REFERENCES USUARIO (ID)
	);

--Tabela Disciplina

CREATE TABLE DISCIPLINA
(
	ID INT IDENTITY ,
	ID_COORDENADOR INT NOT NULL,
	NOME VARCHAR(50) NOT NULL,
	DATA DATETIME NOT NULL CONSTRAINT DF_DATA DEFAULT (GETDATE()) ,
	STATUS_DISCIPLINA VARCHAR(50) NOT NULL CONSTRAINT DF_STATUS_DISCIPLINA DEFAULT ('ABERTA'),
	PLANO_DE_ENSINO VARCHAR(5000) NOT NULL,
	CARGA_HORARIA TINYINT NOT NULL,
	COMPETENCIAS VARCHAR(1000) NOT NULL,
	HABILIDADES VARCHAR(1000) NOT NULL,
	EMENTA VARCHAR(500) NOT NULL,
	CONTEUDO_PROGRAMATICO VARCHAR(6000) NOT NULL,
	BIBLIOGRAFIA_BASICA VARCHAR(300) NOT NULL,
	BIBLIOGRAFIA_COMPLEMENTAR VARCHAR(300),
	PERCENTUAL_PRATICO TINYINT NOT NULL,
	PERCENTUAL_TEORICO TINYINT NOT NULL
	
	CONSTRAINT PK_DISCIPLINA PRIMARY KEY (ID),
	
	CONSTRAINT FK_ID_COORDENADOR FOREIGN KEY (ID_COORDENADOR)
			REFERENCES COORDENADOR (ID),

	CONSTRAINT UQ_DISCIPLINA_NOME UNIQUE (NOME),
	

	CONSTRAINT CK_DISCIPLINA_STATUS CHECK ( STATUS_DISCIPLINA IN ('ABERTA','FECHADA')),


	CONSTRAINT CK_DISCIPLINA_CARGA_HORARIA CHECK ( CARGA_HORARIA = 40 OR CARGA_HORARIA = 80),

	CONSTRAINT CK_DISCIPLINA_PERCENTUAL_PRATICO CHECK (PERCENTUAL_PRATICO >=0 AND PERCENTUAL_PRATICO <=100),

	CONSTRAINT CK_DISCIPLINA_PERCENTUAL_TEORICO CHECK (PERCENTUAL_TEORICO >=0 AND PERCENTUAL_TEORICO <=100)

);

-- TABELA DISCIPLINA OFERTADA
CREATE TABLE DISCIPLINA_OFERTADA
(
	ID  INT IDENTITY ,
	ID_COORDENADOR INT NOT NULL,
	DT_INICIO_MATRICULA DATE,
	DT_FIM_MATRICULA DATE,
	ID_DISCIPLINA INT NOT NULL,  
	ID_CURSO INT NOT NULL,   
	ANO   SMALLDATETIME, 
	SEMESTRE VARCHAR(20),
	TURMA CHAR(50), 
	ID_PROFESSOR INT,
	METODOLOGIA VARCHAR(500),
	RECURSOS VARCHAR(500),
	CRITERIO_AVALIACAO VARCHAR (500),
	PLANO_DE_AULAS VARCHAR (8000),

	CONSTRAINT PK_DISCIPLINA_OFERTADA PRIMARY KEY (ID),

	CONSTRAINT FK_DISCIPLINA_OFERTADA_ID_COORDENADOR FOREIGN KEY (ID_COORDENADOR)
			REFERENCES COORDENADOR (ID),

	CONSTRAINT FK_DISCIPLINA_OFERTADA_ID_DISCIPLINA FOREIGN KEY (ID_DISCIPLINA)
			REFERENCES DISCIPLINA (ID),

	CONSTRAINT FK_DISCIPLINA_OFERTADA_ID_CURSO FOREIGN KEY (ID_CURSO)
			REFERENCES CURSO (ID),

	CONSTRAINT FK_DISCIPLINA_OFERTADA_ID_PROFESSOR FOREIGN KEY (ID_PROFESSOR)
			REFERENCES PROFESSOR (ID),

	CONSTRAINT CK_DISCIPLINA_OFERTADA_ANO CHECK (ANO >1900 AND ANO <2100),
	CONSTRAINT CK_DISCIPLINA_OFERTADA_SEMESTRE CHECK (SEMESTRE = 1 OR SEMESTRE=2),
	CONSTRAINT CK_DISCIPLINA_OFERTADA_TURMA CHECK (TURMA LIKE('[A-Z]'))

	
);
--Tabela solicitação matricula
CREATE TABLE SOLICITACAO_MATRICULA
(
	ID INT IDENTITY ,
	ID_ALUNO INT NOT NULL,
	ID_DISCIPLINA_OFERTADA INT NOT NULL,
	DT_SOLICITACAO DATETIME NOT NULL CONSTRAINT DF_DT_SOLICITACAO DEFAULT (GETDATE()),
	ID_COORDENADOR INT NOT NULL,  
	STATUS_SOLICITACAO_MATRICULA VARCHAR(50) NOT NULL CONSTRAINT DF_STATUS_SOLICITACAO_MATRICULA DEFAULT ('SOLICITADA') ,

	CONSTRAINT PK_SOLICITACAOMATRICULA PRIMARY KEY (ID),

	CONSTRAINT FK_SOLICITACAO_MATRICULA_ID_ALUNO FOREIGN KEY (ID_ALUNO)
			REFERENCES ALUNO (ID),

	CONSTRAINT FK_SOLICITACAO_MATRICULA_ID_COORDENADOR FOREIGN KEY (ID_COORDENADOR)
			REFERENCES COORDENADOR (ID),

	CONSTRAINT FK_SOLICITACAO_MATRICULA_ID_DISCIPLINA_OFERTADA FOREIGN KEY (ID_DISCIPLINA_OFERTADA)
			REFERENCES DISCIPLINA_OFERTADA (ID),
	
	CONSTRAINT CK_STATUS_SOLICITACAO_MATRICULA CHECK ( STATUS_SOLICITACAO_MATRICULA IN ('SOLICITADA','APROVADA','REJEITADA','CANCELADA')),

);

--Tabela atividade
	CREATE TABLE ATIVIDADE
(
	ID INT IDENTITY ,
	TITULO VARCHAR (50) NOT NULL,
	DESCRICAO VARCHAR (500),
	CONTEUDO VARCHAR (500) NOT NULL,
	TIPO VARCHAR (200) NOT NULL,
	EXTRAS VARCHAR (500),
	ID_PROFESSOR INT NOT NULL,

	CONSTRAINT PK_ATIVIDADE PRIMARY KEY (ID),

	CONSTRAINT FK_ATIVIDADE_PROFESSOR FOREIGN KEY (ID_PROFESSOR)
		REFERENCES PROFESSOR (ID),

	CONSTRAINT UQ_TITULO_ATIVIDADE UNIQUE (TITULO),

	CONSTRAINT CK_TIPO_ATIVIDADE 
		CHECK(TIPO IN ('ABERTA', 'TESTE')),



	);

